#!/usr/bin/env node
var debug = require('debug')('music2');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

var io = require('socket.io')(server)



var users = [];
var availableColors = [
  "0, 0, 255",
  "0, 255, 0",
  "255, 0, 0",
  "0, 92, 148",
  "0, 148, 92",
  "92, 0, 148",
  "92, 148, 0",
  "148, 0, 92",
  "148, 92, 0"
  ];

io.on('connection', function (socket) {
  console.log('new user connected...');
  
  var user = {
    id: users.length,
    color: availableColors[users.length % availableColors.length]
    };

  var connCompleteData = {};
  connCompleteData.user = user;
  connCompleteData.collaborators = users;

  users.push(user);

  console.info("new user: " + JSON.stringify(user));

  socket.on('push-note', function (data) {
    console.log('note pushed... by ' + JSON.stringify(user));

    data.user = user;

    socket.broadcast.emit('push-note', data);
  });

  socket.on('clear-grid', function (action) {
    console.info('clear-grid, requested by ' + JSON.stringify(user));
 
    action.user = user;

    socket.broadcast.emit('clear-grid', action);
  });

  socket.on('disconnect', function (data) {
    console.log('user disconnected: ' + JSON.stringify(user));

    socket.broadcast.emit('lost-user', {user: user});
  });

  io.to(socket.id).emit('connection-complete', connCompleteData);
  socket.broadcast.emit('new-user', {user: user});
});
